#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

void linkedlistTraversal(struct Node* ptr) {
    while (ptr != NULL) {
        printf("Element: %d\n", ptr->data);
        ptr = ptr->next;
    }
}

int isEmpty(struct Node* top) {
    return top == NULL;
}

int isFull(struct Node* top) {
    struct Node* p = (struct Node*)malloc(sizeof(struct Node));
    if (p == NULL) {
        return 1;
    } else {
        free(p);
        return 0;
    }
}

struct Node* push(struct Node* top, int x) {
    if (isFull(top)) {
        printf("Stack Overflow\n");
    } else {
        struct Node* p = (struct Node*)malloc(sizeof(struct Node));
        p->data = x;
        p->next = top;
        top = p;
    }
    return top;
}

struct Node* pop(struct Node* top, int* poppedValue) {
    if (isEmpty(top)) {
        printf("Stack Underflow\n");
        return NULL;
    } else {
        struct Node* p = top;
        *poppedValue = p->data;
        top = top->next;
        free(p);
        return top;
    }
}

int main() {
    struct Node* top = NULL;
    top = push(top, 78);
    top = push(top, 7);
    top = push(top, 6);
    top = push(top, 11);
    top = push(top, 19);
    
    int poppedElement;
    top = pop(top, &poppedElement);
    printf("Popped element: %d\n", poppedElement);
    
    linkedlistTraversal(top);
    return 0;
}
