#include<stdio.h>
#include<stdlib.h>

struct Node{
int data;
struct Node * next;
};

void linkedlistTraversal(struct Node* ptr){
    while(ptr != NULL){
       printf("Element:%d\n",ptr->data);
       ptr=ptr->next; 
    }
}

int isEmpty(struct Node* top){
    if(top==NULL){
        return 1;
    }
    else{
        return 0;
    }
}

int isFull(struct Node* top){
    struct Node* p = (struct Node*)malloc(sizeof(struct Node));
    if(p==NULL){
        return 1;
    }
    else{
        return 0;
    }
    
}

struct Node* push(struct Node* top, int x){
   if(isFull(top)){
    printf("Stack Overflow\n");
   }
   else{
    struct Node* p = (struct Node*)malloc(sizeof(struct Node));
    p->data=x;
    p->next=top;
    top=p;

    return top;
   }
}

int pop(struct Node* top){
    if(isEmpty(top)){
        printf("Stack Underflow\n");
    }
    else{
        struct Node* p = (struct Node*)malloc(sizeof(struct Node));
        top = top->next;
        int x =p->data;
        free(p);
        
        return x;
    }
}

int main(){
    struct Node* top = NULL;
    top = push(top,78);
    top = push(top,7);
    top = push(top,6);
    top = push(top,11);
    top = push(top,19);
    int element= pop(top);
    linkedlistTraversal(top);
    return 0;
}
